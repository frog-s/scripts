local X = Instance.new("ScreenGui")
local D = Instance.new("Frame")
local Tx = Instance.new("Frame")
local T = Instance.new("TextBox")
local Bx = Instance.new("Frame")
local B = Instance.new("TextButton")

--Properties:

X.Name = "X"
X.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

D.Name = "D"
D.Parent = X
D.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
D.Position = UDim2.new(0.135000005, 0, 0.800000012, 0)
D.Size = UDim2.new(0, 50, 0, 100)
D.ZIndex = 9
D.Style = Enum.FrameStyle.DropShadow

Tx.Name = "Tx"
Tx.Parent = D
Tx.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tx.Position = UDim2.new(-0.203154042, 0, -0.109999992, 0)
Tx.Size = UDim2.new(0, 250, 0, 100)
Tx.Style = Enum.FrameStyle.DropShadow

T.Name = "T"
T.Parent = Tx
T.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
T.BackgroundTransparency = 1.000
T.BorderSizePixel = 0
T.Position = UDim2.new(0.163820192, 0, 0.00196319818, 0)
T.Size = UDim2.new(0, 200, 0, 46)
T.ZIndex = 9
T.Font = Enum.Font.SciFi
T.PlaceholderColor3 = Color3.fromRGB(145, 145, 145)
T.PlaceholderText = "PlayerName or UserId goes here"
T.Text = ""
T.TextColor3 = Color3.fromRGB(255, 255, 255)
T.TextScaled = true
T.TextSize = 14.000
T.TextStrokeTransparency = 0.800
T.TextWrapped = true

Bx.Name = "Bx"
Bx.Parent = D
Bx.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bx.BorderSizePixel = 0
Bx.Position = UDim2.new(-0.200000003, 0, 0.5, 0)
Bx.Size = UDim2.new(0, 250, 0, 50)
Bx.Style = Enum.FrameStyle.DropShadow

B.Name = "B"
B.Parent = Bx
B.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
B.BackgroundTransparency = 1.000
B.BorderSizePixel = 0
B.Position = UDim2.new(0.171199962, 0, -0.147840574, 0)
B.Size = UDim2.new(0, 198, 0, 43)
B.ZIndex = 5
B.Font = Enum.Font.SciFi
B.Text = "Join Player"
B.TextColor3 = Color3.fromRGB(255, 255, 255)
B.TextSize = 30.000
B.TextStrokeTransparency = 0.800
B.TextWrapped = true

-- Module Scripts:

local fake_module_scripts = {}

do -- X.W
	local script = Instance.new('ModuleScript', X)
	script.Name = "W"
	local function module_script()
		local UDim2_new = UDim2.new
		
		local UserInputService = game:GetService("UserInputService")
		
		local DraggableObject 		= {}
		DraggableObject.__index 	= DraggableObject
		
		-- Sets up a new draggable object
		function DraggableObject.new(Object)
			local self 			= {}
			self.Object			= Object
			self.DragStarted	= nil
			self.DragEnded		= nil
			self.Dragged		= nil
			self.Dragging		= false
		
			setmetatable(self, DraggableObject)
		
			return self
		end
		
		-- Enables dragging
		function DraggableObject:Enable()
			local object			= self.Object
			local dragInput			= nil
			local dragStart			= nil
			local startPos			= nil
			local preparingToDrag	= false
		
			-- Updates the element
			local function update(input)
				local delta 		= input.Position - dragStart
				local newPosition	= UDim2_new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				object.Position 	= newPosition
		
				return newPosition
			end
		
			self.InputBegan = object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					preparingToDrag = true
		
					local connection 
					connection = input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End and (self.Dragging or preparingToDrag) then
							self.Dragging = false
							connection:Disconnect()
		
							if self.DragEnded and not preparingToDrag then
								self.DragEnded()
							end
		
							preparingToDrag = false
						end
					end)
				end
			end)
		
			self.InputChanged = object.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
		
			self.InputChanged2 = UserInputService.InputChanged:Connect(function(input)
				if object.Parent == nil then
					self:Disable()
					return
				end
		
				if preparingToDrag then
					preparingToDrag = false
		
					if self.DragStarted then
						self.DragStarted()
					end
		
					self.Dragging	= true
					dragStart 		= input.Position
					startPos 		= object.Position
				end
		
				if input == dragInput and self.Dragging then
					local newPosition = update(input)
		
					if self.Dragged then
						self.Dragged(newPosition)
					end
				end
			end)
		end
		
		-- Disables dragging
		function DraggableObject:Disable()
			self.InputBegan:Disconnect()
			self.InputChanged:Disconnect()
			self.InputChanged2:Disconnect()
		
			if self.Dragging then
				self.Dragging = false
		
				if self.DragEnded then
					self.DragEnded()
				end
			end
		end
		
		return DraggableObject
		
	end
	fake_module_scripts[script] = module_script
end


-- Scripts:

local function KTVD_fake_script() -- X.S 
	local script = Instance.new('LocalScript', X)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	
	local x
	local service = game.GetService;
	local D = require(script.Parent.W)
	local http = service(game,"HttpService")
	local plrs = service(game,"Players")
	local tps = service(game,"TeleportService")
	local guiSettings = {
		main = script.Parent.D,
		textBox = script.Parent.D.Tx.T,
		button = script.Parent.D.Bx.B
	}
	local setting = {
		userid,
		playeruser 
	}
	
	--
	local url = "https://api.roblox.com/users/get-by-username?username="
	local function returnID(name)
		local request = game:HttpGet(url..name)
		
		return http:JSONDecode((request)).Id
	end
	
	--
	local dF = D.new(guiSettings.main)
	dF:Enable()
	
	--
	local function getNumber(input)
		if input:match("%d+") then
			return true
		else
			return false
		end
	end
	
	--
	guiSettings.textBox:GetPropertyChangedSignal("Text"):Connect(function()
		if getNumber(guiSettings.textBox.Text) then
			setting.playeruser = false
			setting.userid = true		
		else
			setting.playeruser = true
			setting.userid = false
		end
	end)
	
	--
	guiSettings.button.MouseButton1Click:Connect(function()
		if setting.userid == true then
			local id = guiSettings.textBox.Text
			
			local x1,y,z,z1 = game.ReplicatedStorage.RemoteFunction:InvokeServer(51,id)
			tps:TeleportToPlaceInstance(z,z1,game.Players.LocalPlayer) 
			
		else
			local id = returnID(guiSettings.textBox.Text)
			print(id)
			
			local x1,y,z,z1 = game.ReplicatedStorage.RemoteFunction:InvokeServer(51,id)
			tps:TeleportToPlaceInstance(z,z1,game.Players.LocalPlayer)  
	
		end
	end)
end
coroutine.wrap(KTVD_fake_script)()
